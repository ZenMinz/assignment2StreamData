extends layout

block content
	h1 #{title}
	p Welcome to #{title}
	form#message-entry(method="post", action='javascript:getHashTags()')
		div.input
			input#latestTime(type='hidden', name='latestTime', value=0)
		div.actions
			button.ui.right.labeled.icon.button
				i.right.arrow.icon
				|   Submit
			br
		br
		div.tagInput
		br
	button#test4.ui.right.labeled.icon.button(onclick='showGraph()')
		i.play.icon
		|   Test
	button#test4.ui.right.labeled.icon.button(onclick='getCheckedHashtag()')
		i.play.icon
		|   Next
	button#test3.ui.right.labeled.icon.button(onclick='stopStream()')
		i.stop.icon
		|  Pause
	div.field
		div#messages
	div.field
		div#comments1.ui.comments

	#comments.ui.top.attached.tabular.menu
	div#details

	link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.css')
	script(src='https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.js')
	
	#pieGraph(style='display: none;')
		p Graph: 
		script(type='text/javascript').
			var w = 800,                        //width
			h = 800,                            //height
			r = 300,                            //radius
			color = d3.scale.category20c();     //builtin range of colors
			data = [{"label":"one", "value":20},
			{"label":"two", "value":50},
			{"label":"three", "value":30}];
			var vis = d3.select("body")
			.append("svg:svg")              //create the SVG element inside the <body>
			.data([data])                   //associate our data with the document
			.attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
			.attr("height", h)
			.append("svg:g")                //make a group to hold our pie chart
			.attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius
			var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
			.outerRadius(r);
			var pie = d3.layout.pie()           //this will create arc data for us given a list of values
			.value(function(d) { return d.value; });    //we must tell it out to access the value of each element in our data array
			var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
			.data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties)
			.enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
			.append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
			.attr("class", "slice");    //allow us to style things in the slices (like text)
			arcs.append("svg:path")
			.attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
			.attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function
			arcs.append("svg:text")                                     //add a label to each slice
			.attr("transform", function(d) {                    //set the label's origin to the center of the arc
			//we have to make sure to set these before calling arc.centroid
			d.innerRadius = 0;
			d.outerRadius = r;
			return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
			})
			.attr("text-anchor", "middle")                          //center the text on it's origin
			.text(function(d, i) { return data[i].label; });        //get the label from our original data array
	
	script.

		let tweets;
		let lastSeen = 0;
		let interval;
		let emptySpace = 50;
		let currentTab = 0;
		$(document).ready(function() {
			//$('.menu .item').tabs("refresh");
			$('.menu .item').tab();
			conversation();

		$("button#add-tab").click(function() {
			var num_tabs = $("div#tabs ul li").length + 1;

				$("div#tabs ul").append(
					"<li><a href='#tab" + num_tabs + "'>#" + num_tabs + "</a></li>"
				);
				$("div#tabs").append(
					"<div id='tab" + num_tabs + "'>#" + num_tabs + "<	/div>"
				);
				$("div#tabs").tabs("refresh");
			});  
		})

		$('.tabular.menu .item').tabs();

		function conversation() {
			$.get('/twitter/twitter', {lastSeen : lastSeen}, function (data) {
				//console.log(data[2].url);
				if (data != "None") {
					console.log(data);
					//console.log("inside get " + lastSeen);
					displayTweet2(data);
					
				}
				interval = setTimeout(conversation, 5000);

				
			});
			

			 
		}
		var xhr;
		function stopRequest() {
			xhr.abort();
		}
		function sendRequest() {
			xhr = $.post('/twitter', function (data) {
				console.log(data);
			});
		}

		function stopStream() {
			console.log("try to stop");
			alert("try to stop");

			$.post('/twitter/stop', function(data) {
				alert("Stop!!");
				clearTimeout(interval);
			});
		}
		function displayTweet(data) {
			let start = new Date();
			let time3 = 0;
			for (let i = 0; i < data.length; i ++) {
				let tweet = data[i];
				let name = tweet.Name;
				let url = tweet.url;
				let text = tweet.text;
				let time2 = tweet.timestamp;
				let time = new Date(tweet.timestamp);
				let str =		`<div class="item">`;
				str +=			`<div class="ui tiny image">`;
				str +=				`<img src="${url}" height="50" width="50">`;
				str +=			`</div>`;
				str +=			`<div class="content">`;
				str +=				`<a class="header">${name}</a>`;
				str +=					`<div class="meta">`;
				str +=						`<span>Description</span>`;
				str +=					`</div>`;
				str +=					`<div class="Text">`;
				str +=						`<p>Text: ${text}</p>`;
				str +=					`</div>`;
				str +=					`<div class="extra">`;
				str +=						`On: ${time} and ${tweet.timestamp}`;
				str +=					`</div>`;
				str +=			`</div>`;
				str +=		`</div>`;
				
				$("#messages").prepend(str);
				$('#latestTime').val(time2);
				lastSeen = time2;				
			}
			return data.length - 1;
		}
		function createString(tweet) {
			//let tweet = data[i];
			let name = tweet.Name;
			let url = tweet.url;
			let text = tweet.text;
			let time = new Date(tweet.timestamp);
			let time2 = tweet.timestamp
			let str = `<div class="comment"><a class="avatar"><img src="${url}"></a><div class="content"><a class="author">${name}</a><div class="metadata"><span class="date">${time}</span></div><div class="text">${text}</div></div></div>`;
			return str;
		}
		function displayTweet2(data) {
			//for (let i = 0; i < data.length; i++) {
				//let tweet = data[i];
				//let name = tweet.Name;
				//let url = tweet.url;
				//let text = tweet.text;
				//let time = new Date(tweet.timestamp);
				//let time2 = tweet.timestamp
				//let str = `<div class="comment"><a class="avatar"><img src="${url}"></a><div class="content"><a class="author">${name}</a><div class="metadata"><span class="date">${time}</span></div><div class="text">${text}</div></div></div>`;
				//createString(tweet);
				//$("#comments").append(str);
				//lastSeen = time2;
			//}
			let space = 50;
			for (let i = 0; i < data.length; i++) {
				let tweet = data[i];
				let time2 = tweet.timestamp;
				let availableSpace = space - emptySpace;
				if (emptySpace == 0) {
					currentTab += 1;
					let str = `<a class="item" data-tab="${currentTab}">${currentTab}</a>`;					
					let str2 = `<div class="ui bottom attached tab segment" data-tab="${currentTab}">
									<div class="ui comments" id="comment${currentTab}"><br>
									</div>
								</div>`;
					$("#comments").append(str);
					$("#details").append(str2);
					emptySpace = 50;
				}
				$(`#comment${currentTab}`).append(createString(tweet));
				emptySpace += -1;
				lastSeen = time2;
			}
			$('.menu .item').tab();
		}

		function getHashTags() {
			$.post('/twitter/hashTags', function (data) {
				displayHashTags(data);
				tweets = data;
			})
		}

		function displayHashTags(data) {
			$(".tagInput").empty();
			let str2 = `<div class="ui grid">`;
			for (let i = 0; i < data.length; i ++) {
				//let str = `<button type="button" class="btn btn-outline-primary">${data[i]}</button>`;
				//$(".tagInput").append(str);
				let str = `<div class="custom-control custom-checkbox">
								<input type="checkbox" class="custom-control-input" id="customCheck${i+1}">
								<label class="custom-control-label" for="customCheck${i+1}">${data[i]}</label>
							</div>`;
				str2 += `<div class="four wide column">`;
				str2 += `	<div class="ui toggle checkbox">
								<input type="checkbox" id=check${i + 1}>
								<label>${data[i]}</label>
							</div>`;
				str2 += `</div>`;
				//$(".tagInput").append(str2);
			}
			str2 += `</div>`;

			$(".tagInput").append(str2);

		}
		$("#test").click(function() {
			getCheckedHashtag();
		})

		function sendPostRequest(trend) {


			$.post('/twitter/stream', {'trend': trend}, function (data) {
				console.log(data);
			})
		}

		function getCheckedHashtag() {
			interval = setTimeout(conversation, 5000);
			let selected = [];
			for (let i = 0; i < tweets.length; i++) {
				if ($(`#check${i+1}`).is(":checked")) {
					selected.push(tweets[i]);
				}
			}
			let length = selected.length;
			//selected = JSON.stringify(length);
			let str = selected.join(',');
			//console.log(str);
			//for (let i = 0; i < length; i ++) {
			//sendPostRequest(selected[i]);
			//}
			sendPostRequest(str);


		}
		function getFromAnother() {
			$.get('/twitter/test', function (data) {
				console.log(data);
				showGraph(data)
			})
		}

		$(".btn").click(function() {
			$(".btn").css("background-color","yellow");
		})

		function showGraph() {

			var e = document.getElementById('pieGraph');

			if (e.style.display == 'block')
				e.style.display = 'none';
			else
				e.style.display = 'block';
		}
	

			
		


		
